{
  "name": "Find me",
  "tagline": "",
  "body": "# FIND_ME\r\n\r\nFind_me is optimization software for minimum energy structure **under development**.\r\n\r\n## Content\r\n\r\n<ul>\r\n  <li>\r\n    <a href=#our-goal>Our Goal</a>\r\n  </li>\r\n  <li>\r\n    <a href=#did-and-test>Did And Test</a>\r\n    <ul>\r\n      <li>\r\n        <a href=#a-wrap-for-vasp>A wrap for VASP</a>\r\n        <ul>\r\n          <li><a href=#a-test>A Test</a></li>\r\n          <li><a href=#instruction-for-poscar>instruction for POSCAR</a></li>\r\n          <li><a href=#attention>Attention</a></li>\r\n        </ul>\r\n      </li>\r\n      <li>\r\n        <a href=#link-with-pso>link with PSO</a>\r\n      </li>\r\n      <li>\r\n        <a href=#link-with-random-search>link with random search</a>\r\n      </li>\r\n      <li>\r\n        <a href=#link-with-spearmint>link with Spearmint</a>\r\n        <ul>\r\n          <li><a href=#code>Code</a></li>\r\n          <li><a href=#test>Test</a></li>\r\n          <li><a href=#attention-1>Attention</a></li>\r\n          <li><a href=#some-test-output>Some Test Output</a></li>\r\n        </ul>\r\n      </li>\r\n    </ul>\r\n  </li>\r\n  <li>\r\n    <a href=#todo>TODO</a>\r\n  </li>\r\n</ul>\r\n\r\n## Our Goal\r\n\r\nInput element and atoms number, \r\n\r\nvia optimization method, and [VASP](http://www.vasp.at/), \r\n\r\nwith calculation and optimization, \r\n\r\nit output the global minimum energy structure.\r\n\r\n## Did And Test\r\n\r\n### A wrap for VASP\r\n\r\nAs you see in [POSCAR example](https://github.com/zh19970205/find_me/blob/master/test/H2O/POSCAR), \r\nWe define a format to get the true POSCAR for VASP, \r\nwith parser [shared.py](https://github.com/zh19970205/find_me/blob/master/shared.py). \r\n\r\nSo we get a python function with structure parameters(positions of atoms) as arguments, \r\nwhich call VASP and return energy.\r\n\r\n#### A Test\r\n\r\nTry:\r\n```\r\n# git clone git@github.com:zh19970205/find_me.git\r\n...\r\n# cd find_me\r\n# ./get_data.sh H2O\r\n# python\r\n...\r\n>>> from shared import get_energy\r\n>>> get_energy([1,1.5,1.2],0,0)\r\n-7.96509304\r\n```\r\n\r\nget_data.sh is just a script copying POSCAR, POTCAR, and config.json from test/ to .\r\n\r\nPOSCAR:\r\n```\r\nH2O\r\n1.00\r\n5       0       0\r\n0       5       0\r\n0       0       5\r\nH       O\r\n2       1\r\ncart\r\n0.00    0.00    0.00\r\n{(a)}   0.00    0.00\r\n{(b)}   {(c)}   0.00\r\n{{\r\nprecision       2\r\nvars\r\na       0.1     2\r\nb       -2      2\r\nc       0.1     2\r\n}}\r\n```\r\n\r\n#### instruction for POSCAR\r\n\r\n- {...} means this should be replace before calling VASP, and inside it, you can write expression like {(r)*cos(theta)}, this is useful if you know about some symmetry of the structure\r\n- variables should be in (...), for parsing easier\r\n- inside {{...}}, there is some options, eg: precision means decimal places, \r\nthere are some options for random search: cores and times(the totally structure you will calculate is cores*times), \r\nthere are some options for pso: omega, phip, phig.\r\n- after vars, there is variables and its domain\r\n\r\nAs you see above, {(a)} will be replaced by 1 and {(b)} replaced by 1.5 and {(c)} replaced by 1.2, \r\nand then python will call VASP and get **the last TOTEN from OUTCAR**.\r\n\r\n#### Attention\r\n\r\nfind_me need VASP **without** mpi, or there will be conflict between mpi in VASP and it in find_me. \r\nIt is general knowledge that parallel program isn't as efficient as serial program. \r\n\r\n![http://cms.mpi.univie.ac.at/vasp/vasp/img49.png](http://cms.mpi.univie.ac.at/vasp/vasp/img49.png)\r\n\r\nso we decide to give the parallel chance to optimization method, for its good parallel performance. \r\n\r\nSo please compile a version without mpi for VASP and rename it as \"vasp_without_mpi\" and put it into $PATH\r\n\r\n### link with [PSO](https://en.wikipedia.org/wiki/Particle_swarm_optimization)\r\n\r\nthe code is in [pso_find_me.py](https://github.com/zh19970205/find_me/blob/master/pso_find_me.py), Just for test and contrasts. You can ignore it. \r\n\r\nTry:\r\n```\r\n# ./get_data.sh H2O\r\n```\r\nand set times 3 and cores 3 in POSCAR, and\r\n```\r\n# mpirun -n 3 python pso_find_me.py\r\n[0.6396422576541099, -1.178237412205891, 0.7174609562987219]\r\n-6.90623521\r\n[0.6396422576541099, -1.178237412205891, 0.7174609562987219]\r\n-6.90623521\r\n[0.6396422576541099, -1.178237412205891, 0.7174609562987219]\r\n-6.90623521\r\n[1.0460718276254388, -0.3878937232244988, 0.718089995806529]\r\n-8.21903742\r\n```\r\nit will output parameters and energy of the observed minimum energy structure for each time.\r\n\r\n### link with random search\r\n\r\nthe code is in [surf_energy.py](https://github.com/zh19970205/find_me/blob/master/surf_energy.py), Just for test. You can ignore it. \r\n\r\nTry:\r\n```\r\n# ./get_data.sh H2O\r\n```\r\nand set times 3 and cores 3 in POSCAR, and\r\n```\r\n# mpirun -n 3 python surf_energy.py\r\n[0.5729802365387486, -0.5199666951689141, 1.3634050774944872]\r\n-6.27935381\r\n[0.39566346272656694, -1.682242752146247, 0.4674818456204878]\r\n-1.1084951\r\n[0.13055589978807816, -1.6821267522002494, 0.15910217557314077]\r\n65.58070443\r\n[0.27638633468013285, 1.1741958325033757, 1.359220673768153]\r\n10.30662607\r\n[0.8015793042340994, -1.3107675554786464, 1.2112746779577124]\r\n-7.12601719\r\n[1.1276158144716721, -0.18502400862421853, 1.4800347737040116]\r\n-7.2327105\r\n[1.3406260585320342, 1.426072101772327, 1.1315826861224447]\r\n-9.06377695\r\n[1.172328113256835, 1.4295430294010014, 1.915353771208993]\r\n-5.99833314\r\n[1.8795975781044238, 0.083169635727661, 1.8483449168154649]\r\n-4.2747424\r\n```\r\nit will output parameters and energy for each calculation.\r\n\r\n### link with [Spearmint](https://github.com/HIPS/Spearmint)\r\n\r\nSpearmint is an implementation of [Bayesian Optimization](https://en.wikipedia.org/wiki/Bayesian_optimization). \r\nWhen it work, it play a role as a manager to call function you supply.\r\n\r\n#### Code\r\n\r\nSpearmint need a config.json([example](https://github.com/zh19970205/find_me/blob/master/test/H2O/config.json)), \r\nand a python script with main function in it. \r\n\r\nSo we just wrap a function for Spearmint over shared.py \r\nin [spearmint_link.py](https://github.com/zh19970205/find_me/blob/master/spearmint_link.py) \r\n\r\n#### Test\r\n\r\nTry:\r\n```\r\n# mkdir ~/var\r\n# mongod --fork --logpath ~/var/mongodb/log --dbpath ~/var/mongodb\r\n# python \\</path/to/python/library/directory\\>/site-packages/spearmint/main.py .\r\n```\r\nthen you will get many 00000***.out in output/\r\n```\r\n# cat output/* | grep Got\\ result | sed s/Got\\ result\\ //\r\n```\r\nthen you get the output energy for each step\r\n\r\n#### Attention\r\n- Spearmint require pymongo, numpy, scipy and mongdb.\r\n\r\n#### Some Test Output\r\n\r\n##### H2O(3 param)\r\n\r\nThe true energy is -14.224 eV, find_me find -14.056 eV.\r\n\r\n![H2O](https://raw.githubusercontent.com/zh19970205/find_me/master/images/H2O.bmp)\r\n\r\n##### NH3(6 param)\r\n\r\nThe true energy is -19.246,find_me find -19.259 eV.\r\n\r\n![NH3](https://raw.githubusercontent.com/zh19970205/find_me/master/images/NH3.bmp)\r\n\r\n##### CH4(9 param)\r\n\r\nThe true energy is -23.678 eV.\r\n\r\nCalculating...\r\n\r\nx axis is iteration step and y axis is energy(eV).\r\n\r\nAs you see, it seems that there are two element during optimization: exploration and exploitation, \r\nat first exploration has more weight and later exploitation has.\r\nThis balance is maintained automatically in Bayesian Optimization.\r\n\r\n## TODO\r\n\r\n- Useless\r\n  - Compiling Optimization for VASP(Gamma Point Only)\r\n  - Other OM combined with ML?(PSO?)\r\n  - Can Spearmint be separated more with VASP?\r\n  - integrated dft and opt(OK, Think too much)\r\n- To learn about\r\n  - Basin Hopping?\r\n  - AIRSS?\r\n- Don't Do Repeatly\r\n  - Get info of relaxation in VASP\r\n  - Can WAVECAR be used?\r\n- Don't Do Uselessly\r\n  - Learn to use Spearmint\r\n  - Know about GP and Stochastic Process\r\n  - prior probability with EAM,...(EI/second) ?\r\n  - Set lower precision to accelerate calculation(dynamic, because it may be useful only at first)(Time Complexity)\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}